{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","link","to","id","activeClassName","active","name","Message","message","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","button","Dialogs","state","dialogsPage","dialogsItems","dialogs","map","d","messagesItems","messages","m","isAuth","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,KAAO,sBAAsB,OAAS,wBAAwB,SAAW,0BAA0B,KAAO,sBAAsB,OAAS,0B,qGCS7PC,EANI,SAACC,GAChB,OACI,qBAAKC,UAAWC,IAAEC,OAAlB,SAA0B,cAAC,IAAD,CAASF,UAAWC,IAAEE,KAAMC,GAAI,YAAcL,EAAMM,GAAIC,gBAAiBL,IAAEM,OAA3E,SAAoFR,EAAMS,UCG7GC,EANC,SAACV,GACb,OACI,qBAAKC,UAAWC,IAAES,QAAlB,SAA4BX,EAAMW,W,yCC8BtCC,EAAcC,YAAiB,IAa7BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAXL,SAACf,GACpB,OACI,uBAAMC,UAAWC,IAAEc,KAAMC,SAAUjB,EAAMkB,aAAzC,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAcH,KAAK,iBAAiBe,YAAa,yBAEtG,8BAAK,wBAAQvB,UAAWC,IAAEuB,OAArB,0BAOFC,EAzCC,SAAC1B,GACb,IAAI2B,EAAQ3B,EAAM4B,YACdC,EAAeF,EAAMG,QAAQC,KAAK,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAiBH,GAAI0B,EAAE1B,IAAZ0B,EAAE1B,OACxE2B,EAAgBN,EAAMO,SAASH,KAAK,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASxB,QAASwB,EAAExB,SAAcwB,EAAE7B,OAMjF,OAAKN,EAAMoC,OAKP,sBAAKnC,UAAWC,IAAE4B,QAAlB,UACI,qBAAK7B,UAAWC,IAAE2B,aAAlB,SACMA,IAEN,sBAAK5B,UAAWC,IAAEgC,SAAlB,UACI,8BAAOD,IACP,cAACnB,EAAD,CAAqBG,SAfb,SAACoB,GACjBrC,EAAMsC,YAAYD,EAAOE,yBAIlB,cAAC,IAAD,CAAUlC,GAAI,Y,gBCCdmC,sBACXC,aAfkB,SAACd,GACnB,MAAO,CACJC,YAAaD,EAAMC,gBAIH,SAACc,GACpB,MAAO,CACHJ,YAAa,SAACC,GACVG,EAASC,YAAmBJ,SAOpCK,IAFWJ,CAGbd","file":"static/js/3.7667e348.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"link\":\"Dialogs_link__21lvl\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"form\":\"Dialogs_form__1EQXf\",\"button\":\"Dialogs_button__UnW0m\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './../Dialogs.module.css';\n\nconst DialogItem = (props) => {\n    return (\n        <div className={s.dialog}><NavLink className={s.link} to={'/dialogs/' + props.id} activeClassName={s.active}>{props.name}</NavLink></div>\n    )\n};\n\nexport default DialogItem;","import React from 'react';\nimport s from './../Dialogs.module.css';\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>{props.message}</div>\n    )\n};\n\nexport default Message;","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Redirect } from 'react-router';\nimport { Field, reduxForm } from 'redux-form';\nimport { Textarea } from '../common/FormControllers/FormControllers';\nimport { maxLengthCreator, required } from '../../Validators/Validators';\n\nconst Dialogs = (props) => {\n    let state = props.dialogsPage;\n    let dialogsItems = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} /> );\n    let messagesItems = state.messages.map( m => <Message message={m.message} key={m.id}/> );\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    };\n\n    if (!props.isAuth) {\n        return <Redirect to={'/login'}/>\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                { dialogsItems }\n            </div>\n            <div className={s.messages}>\n                <div>{ messagesItems }</div>\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    )\n};\n\nlet maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n    return (\n        <form className={s.form} onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} validate={[required, maxLength50]} name='newMessageBody' placeholder={'Enter your message'} />\n            </div>\n            <div><button className={s.button}>Send</button></div>\n        </form>\n    )\n};\n\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\n\nexport default Dialogs;","import { connect } from 'react-redux';\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\nimport { withAuthRedirect } from '../../HOC/withAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = (state) => {\n    return {\n       dialogsPage: state.dialogsPage\n    }\n};\n\nlet mapDispatchProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody));\n        }\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchProps),\n    withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}